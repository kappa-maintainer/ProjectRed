plugins {
    id 'net.minecraftforge.gradle'
    id 'com.github.johnrengelman.shadow'
//    id 'com.matthewprenger.cursegradle'
}

String mod_id = 'projectred-fabrication'

minecraft {
    mappings channel: mcp_mappings, version: mc_version
    accessTransformer = file("../core/src/main/resources/META-INF/accesstransformer.cfg")
    runs {
        client {
            workingDirectory file('run')
            mods {
                '${mod_id}' { source sourceSets.main }
            }
        }
        server {
            workingDirectory file('run')
            mods {
                '${mod_id}' { source sourceSets.main }
            }
        }
        datagen {
            workingDirectory file('run')
            args '--mod', mod_id, '--all', '--output', file("src/main/generated"), '--existing', file("src/main/resources")
            mods {
                '${mod_id}' { source sourceSets.main }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    implementation "codechicken:CodeChickenLib:${mc_version}-${ccl_version}:deobf"
    implementation "codechicken:CBMultipart:${mc_version}-${cbm_version}:deobf"

    implementation project(":core")
    // TODO fails if not compileOnly
    compileOnly project(":integration")
    compileOnly project(":transmission")

    // Dependencies to be packed into jar
    shadow("io.github.mrtjp:fabrication-engine:${fabrication_version}") { transitive = false }
}

// Jar settings
jar.enabled = false
shadowJar {
    // Jar configurations
    archiveClassifier = jar.archiveClassifier
    configurations = [project.configurations.shadow]

    // Attach reobf task
    finalizedBy 'reobfShadowJar'
}

build.dependsOn shadowJar

reobf {
    jar { enabled = false } // Disable unshaded jar
    shadowJar { } // Enable shadow jar reobf
}

//TODO
//curseforge {
//    apiKey = System.getenv('CURSE_TOKEN') ?: 'XXX'
//
//    // Expansion
//    project {
//        id = '229048'
//        releaseType = System.getenv('CURSE_RELEASE_TYPE') ?: 'alpha'
//        changelogType = 'markdown'
//        changelog = rootProject.file('CHANGELOG.md')
//        relations {
//            requiredDependency 'project-red-core'
//        }
//    }
//}